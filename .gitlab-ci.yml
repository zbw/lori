workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push" # avoids duplicate pipelines when a merge request is open
      when: never
    - if: $CI_COMMIT_BRANCH == null || $CI_OPEN_MERGE_REQUESTS == null || $CI_PIPELINE_SOURCE != "push"

variables:
  ALPINE: "alpine"

default:
  image: eclipse-temurin:17.0.13_11-jdk

stages:
  - build
  - test
  - push
  - deploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

build:
  stage: build
  rules:
    - if: $CI_COMMIT_BEFORE_SHA == "0000000000000000000000000000000000000000" && $CI_PIPELINE_SOURCE == "push" # first statement evaluates as true for first pipeline run on a new branch, and for merge requests
      changes:
        compare_to: 'refs/heads/main'
        paths:
          - app/**/*
          - buildSrc/**/*
          - job/**/*
    - if: $CI_COMMIT_BEFORE_SHA != "0000000000000000000000000000000000000000" || $CI_PIPELINE_SOURCE != "push"
      changes:
        paths:
          - app/**/*
          - buildSrc/**/*
          - job/**/*
  tags:
    - dockersocket
  script:
    - ./gradlew assemble --parallel
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 week

test:
  stage: test
  needs: ["build"]
  rules:
    - if: $CI_COMMIT_BEFORE_SHA == "0000000000000000000000000000000000000000" && $CI_PIPELINE_SOURCE == "push" # first statement evaluates as true for first pipeline run on a new branch, and for merge requests
      changes:
        compare_to: 'refs/heads/main'
        paths:
          - app/**/*
          - buildSrc/**/*
    - if: $CI_COMMIT_BEFORE_SHA != "0000000000000000000000000000000000000000" || $CI_PIPELINE_SOURCE != "push"
      changes:
        paths:
          - app/**/*
          - buildSrc/**/*
  dependencies:
    - build
  tags:
    - privileged
  script:
    - ./gradlew check --parallel
  artifacts:
    when: always
    reports:
      junit: app/*/**/TEST-*.xml

pushLoriAppImage:
  stage: push
  needs: ["test"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - app/lori/**/*
  dependencies:
    - test
  tags:
    - dockersocket
  script:
    - ./gradlew :app:lori:server:jibBuildTar
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_IMAGEPUSHER"
    - base64 -d "$SSH_PRIVATE_KEY_IMAGEPUSHER" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cat "$SSH_KNOWN_HOSTS_QS" "$SSH_KNOWN_HOSTS_PROD" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp app/lori/server/build/jib-image.tar imagepusher@lori-prod.dmz3.zbw.eu:/var/tmp/lori_${CI_COMMIT_SHORT_SHA}.tar
    - scp app/lori/server/build/jib-image.tar imagepusher@lori-qs.dmz3.zbw.eu:/var/tmp/lori_${CI_COMMIT_SHORT_SHA}.tar

pushLoriImportJobImage:
  stage: push
  needs: ["build"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/lori_import/**/*
  dependencies:
    - build
  tags:
    - dockersocket
  script:
    - ./gradlew :job:lori_import:jibBuildTar
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_IMAGEPUSHER"
    - base64 -d "$SSH_PRIVATE_KEY_IMAGEPUSHER" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cat "$SSH_KNOWN_HOSTS_QS" "$SSH_KNOWN_HOSTS_PROD" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp job/lori_import/build/jib-image.tar imagepusher@lori-prod.dmz3.zbw.eu:/var/tmp/lori_import_${CI_COMMIT_SHORT_SHA}.tar
    - scp job/lori_import/build/jib-image.tar imagepusher@lori-qs.dmz3.zbw.eu:/var/tmp/lori_import_${CI_COMMIT_SHORT_SHA}.tar

pushTemplateApplyJobImage:
  stage: push
  needs: ["build"]
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/template_apply/**/*
  dependencies:
    - build
  tags:
    - dockersocket
  script:
    - ./gradlew :job:template_apply:jibBuildTar
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_IMAGEPUSHER"
    - base64 -d "$SSH_PRIVATE_KEY_IMAGEPUSHER" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cat "$SSH_KNOWN_HOSTS_QS" "$SSH_KNOWN_HOSTS_PROD" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp job/template_apply/build/jib-image.tar imagepusher@lori-prod.dmz3.zbw.eu:/var/tmp/template_apply_${CI_COMMIT_SHORT_SHA}.tar
    - scp job/template_apply/build/jib-image.tar imagepusher@lori-qs.dmz3.zbw.eu:/var/tmp/template_apply_${CI_COMMIT_SHORT_SHA}.tar

deployToQs:
  stage: deploy
  needs: ["pushLoriAppImage"]
  environment: qs
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - app/lori/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_QS"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_QS" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_QS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-qs.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/lori_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/app-lori-server:[0-9a-zA-Z_.-]*/app-lori-server:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-qs/docker-compose-qs.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml --profile "*" down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml up -d
      docker container prune --filter "until=100h" -f
      docker ps
      EOT

deployToProd:
  stage: deploy
  when: manual
  needs: ["pushLoriAppImage"]
  environment: production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - app/lori/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_PROD"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_PROD" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_PROD" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-prod.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/lori_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/app-lori-server:[0-9a-zA-Z_.-]*/app-lori-server:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-prod/docker-compose-prod.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml --profile "*" down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml up -d
      docker ps
      EOT

deployImportJobToQs:
  stage: deploy
  needs: ["pushLoriImportJobImage"]
  environment: qs
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/lori_import/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_QS"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_QS" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_QS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-qs.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/lori_import_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/job-lori_import:[0-9a-zA-Z_.-]*/job-lori_import:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-qs/docker-compose-qs.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml --profile cronjob-loriimport up -d
      docker ps
      EOT

deployImportJobToProd:
  stage: deploy
  when: manual
  needs: ["pushLoriImportJobImage"]
  environment: production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/lori_import/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_PROD"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_PROD" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_PROD" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-prod.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/lori_import_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/job-lori_import:[0-9a-zA-Z_.-]*/job-lori_import:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-prod/docker-compose-prod.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml --profile cronjob-loriimport up -d
      docker ps
      EOT

deployTemplateApplyJobToQs:
  stage: deploy
  needs: ["pushTemplateApplyJobImage"]
  environment: qs
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/template_apply/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_QS"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_QS" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_QS" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-qs.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/template_apply_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/job-template_apply:[0-9a-zA-Z_.-]*/job-template_apply:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-qs/docker-compose-qs.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml --profile cronjob-template-apply up -d
      docker ps
      EOT

deployTemplateApplyJobToProd:
  stage: deploy
  when: manual
  needs: ["pushTemplateApplyJobImage"]
  environment: production
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - job/template_apply/**/*
  image:
    name: $ALPINE
  script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh-client )'
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY_DOCKER_PROD"
    - base64 -d "$SSH_PRIVATE_KEY_DOCKER_PROD" | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cp "$SSH_KNOWN_HOSTS_PROD" ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - |
      ssh docker@lori-prod.dmz3.zbw.eu /bin/bash -s << EOT
      docker load --input /var/tmp/template_apply_${CI_COMMIT_SHORT_SHA}.tar && \
      sed -i "s/job-template_apply:[0-9a-zA-Z_.-]*/job-template_apply:${CI_COMMIT_SHA:0:12}/g" /srv/lori/config-prod/docker-compose-prod.yaml && \
      docker compose -f /srv/lori/docker-compose.yaml down --remove-orphans
      docker compose -f /srv/lori/docker-compose.yaml --profile cronjob-template-apply up -d
      docker ps
      EOT

after_script:
  - echo "End CI"
